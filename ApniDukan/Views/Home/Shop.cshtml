@using ApniDukan.Common;
<link href="~/css/ourteamcard.css" rel="stylesheet" />

@model IEnumerable<ApniDukan.Models.Product>

@{
    ViewData["Title"] = "Shop";
}

<script>
    function addToCart(productID) {
        //alert('add to cart..' + productID);
        var productData = document.getElementById(productID).value;
        //alert(productData);
        var data = JSON.parse(productData);
        //alert(data);
        $.ajax({
            type: 'POST',
            url: "@(Url.Action("AddToCart", "Orders"))",
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
            data: data,
            success: function (result) {
                document.getElementById('cart-badge').innerHTML = result.productCount;
                //alert(result.message);
                //console.log(result);
            },
            error: function () {
                alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })
    }
</script>

<h1>Shop</h1>

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-3 col-sm-6" style="padding:10px;">
            <div class="our-team">
                <div class="pic">
                    <img decoding="async"
                     src="@("~/upload/product/image/"+ (string.IsNullOrEmpty(item.FilePath) ? "product-placeholder-wp.jpg" : item.FilePath))"
                     asp-append-version="true"
                     width="250px"
                     height="300px"
                     alt="product_img" />
                </div>
                <input id="@item.ProductID" type="hidden" value="@item.ToJson()" />
                <h3 class="title">@Html.DisplayFor(modelItem => item.Name)</h3>
                <span class="post">@Html.DisplayFor(modelItem => item.Category.Name)</span>
                <button type="button" class="btn btn-danger text-white" onclick="addToCart(@item.ProductID)">Add To Cart</button>
            </div>
        </div>
    }
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}